///////////////////////////////////////////////////////////////////////////////
// File: mono_image.cpp
///////////////////////////////////////////////////////////////////////////////
// Purpose: Replicates mono assembly functionality.
///////////////////////////////////////////////////////////////////////////////
// Author: Deniz Sezen
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Includes
///////////////////////////////////////////////////////////////////////////////

// Mono includes
#include "mono_security.h"

// Windows includes
#include <Windows.h>

// C Standard Library includes
#include <stdint.h>
#include <inttypes.h>

// Common includes
#include "common_log.h"

///////////////////////////////////////////////////////////////////////////////
// Module function implementation
///////////////////////////////////////////////////////////////////////////////
DEFINE_MONO_FUNC(mono_security_set_mode);

///////////////////////////////////////////////////////////////////////////////
// Implementation
///////////////////////////////////////////////////////////////////////////////

// ----------------------------------------------------------------------------
// Initializes the mono security API.
// ----------------------------------------------------------------------------
bool mono_security_api_init(void)
{
    HMODULE hMono = GetModuleHandle(L"mono.dll");
    if (!hMono) {
        LogPrintf(ELogLevel::ERROR, L"Could not find address of mono.dll!\n");
        return false;
    }

    LogPrintf(ELogLevel::DEBUG, L"Found mono.dll address at: %016" PRIxPTR "\n", (uintptr_t)hMono);

    bool bResult = true;
    {
        MONO_FUNC_GET_ADDR(hMono, mono_security_set_mode, bResult);
    }
    return bResult;
}